kind: ConfigMap
metadata:
  namespace: waterfall
  name: bungeecord-plugin-configs
apiVersion: v1
data:
  BungeeCordPrometheusExporter-config.json: |
    {
      "host": "0.0.0.0",
      "port": "9225",
      "prefix": "bungeecord_",
      "jvm_gc": "true",
      "jvm_memory": "true",
      "jvm_threads": "true",
      "player_connects": "true",
      "player_disconnects": "true",
      "server_list_pings": "true",
      "managed_servers": "true",
      "online_players": "true",
      "redis_player_connects": "false",
      "redis_player_disconnects": "false",
      "redis_online_players": "false",
      "redis_bungee_online_proxies": "false"
    }

  SwiftMOTD-config.yml: |
    # Override if necessary.
    motds:
      generic: 
      - '&cJoin now!%newline&d&oYou wont regret it!'
      - '&eClick me &6&lNOW&e!%newline&aWoop, I haz your multilinez!'
      - '&c&k||| &aBest server ever! &c&k|||'
      dynamic: 
      - '&aHi, &6%player&a!%newline&eWoop, multi-line!'
      - '&e%player, &cI command you to join!%newline&cOr burn in &lhell!!'
      - '&dWe know you want it, &b%player&d!'

  LunaChat-config.yml: |
    # LunaChat v3.0.16
    # @author     ucchy
    # @license    LGPLv3
    # @copyright  Copyright ucchy 2020
    
    
    # -------------------- General settings --------------------
    
    #Language setting
    lang: ja
    
    # Whether to enable channel chat function
    enableChannelChat: false
    
    # You can set the priority of event processing.
    # Use this when it doesn't work well in combination with other plugins.
    # You can specify one of LOWEST, LOW, NORMAL, HIGH, HIGHEST.
    # Leave the default HIGH if you're not sure.
    playerChatEventListenerPriority: 'HIGH'
    
    
    # -------------------- Channel chat settings --------------------
    
    # Whether to treat the remarks of people who are not in channel chat as global
    noJoinAsGlobal: true
    
    # Whether to leave the contents of channel chat remarks in the log
    loggingChat: true
    
    # Whether to show the contents of channel chat on the server console
    displayChatOnConsole: true
    
    # Global marker.
    # If this is in the head of a statement, it temporarily becomes a global statement.
    globalMarker: '!'
    
    # Whether to delete the channel when all members leave
    zeroMemberRemove: false
    
    # Whether to show participating channels when logging in
    showListOnJoin: false
    
    # When someone specifies a channel that does not exist with the "/ch join" command,
    # whether to create a new channel and enter
    createChannelOnJoinCommand: false
    
    # Global channel to use as default instead of regular chat.
    # If you use regular chat without creating a global channel,
    # specify the empty string ''.
    globalChannel: ''
    
    # A channel(s) that users who join the server must join.
    # Can be specified separately from the global channel.
    # Multiple channels can be set. Example) forceJoinChannels: ['L','M','N']
    forceJoinChannels: []
    
    # A keyword that must be included when executing the format command.
    formatConstraint: ['%username','%msg']
    
    # The format settings that are set by default when you create a channel.
    # The following keywords can be used for formatting.
    # %ch: Channel name
    # %color: Channel color
    # %displayname: Speaker display name
    # %player: Speaker ID
    # %server: Speaker's connection server name (valid when installed on BungeeCord side.)
    # %world : World name
    # %prefix: prefix (replaced if Vault and Prefix/Suffix plugin are installed)
    # %suffix: suffix (replaced if Vault and Prefix/Suffix plugin are installed)
    # %date: date
    # %time: time
    # %msg: Content of statement
    defaultFormat: '&f[%color%ch&f]%prefix%displayname%suffix&a:&f %msg'
    
    # Setting to display the content of all channels on the OP screen.
    opListenAllChannel: false
    
    # The minimum string length that the channel name must satisfy when creating a new channel.
    # If the specified channel name is less than this number of characters, an error occurs and the channel cannot be created.
    minChannelNameLength: 4
    
    # Maximum string length that the channel name must satisfy when creating a new channel.
    # If the specified channel name exceeds this number of characters, an error occurs and the channel cannot be created.
    maxChannelNameLength: 20
    
    # Whether to enable the quick channel chat feature.
    # You can use Quick Channel Chat by saying "(Channel Name or Alias) + (Dedicated Symbol) + (Message)".
    # For example, if you set the alias m to the main channel, you do not have to speak to the main channel
    # m:Hello!
    # You can say to the main channel by saying.
    enableQuickChannelChat: true
    
    # Symbol used for quick channel chat feature.
    quickChannelChatSeparator: ':'
    
    
    # -------------------- Private message settings --------------------
    
    # When sending a private message with the # /tell, /msg or /r command, applied formatting.
    # The following keywords can be used for formatting.
    # %ch: Channel name (same as "%player>%to")
    # %displayname: Speaker display name
    # %player: Speaker ID
    # %server: Speaker's connection server name (valid when installed on BungeeCord side.)
    # %to: ID of the person (recipient) who speaks
    # %recieverserver: Recipient's connection server name (valid when installed on BungeeCord side)
    # %world: Name of the world you said (Valid when it is installed on the spigot side. When MultiVerse is installed, the display name of the world is acquired and used.)
    # %prefix: prefix (replaced if Vault and Prefix/Suffix plugin are installed)
    # %suffix: suffix (replaced if Vault and Prefix/Suffix plugin are installed)
    # %date: date
    # %time: time
    # %msg: Content of statement (When converted to Japanize, the result of Japanize is included.)
    defaultFormatForPrivateMessage: '&7[%player -> %to]&f %msg'
    #defaultFormatForPrivateMessage: '&7[%player@%server > %to@%recieverserver] %msg'
    
    
    # -------------------- dynmap linkage setting --------------------
    
    # Whether to send the contents of the broadcast channel to dynmap.
    # This setting is ignored (handled as false) if dynmap is not loaded.
    sendBroadcastChannelChatToDynmap: true
    
    # Whether to reflect the channel format when sending to dynmap.
    # If set to true, a message reflecting the channel format will be displayed on the dynmap.
    # If set to false, only messages will be displayed on dynmap.
    # Reference: https://github.com/ucchyocean/LunaChat/issues/68
    sendFormattedMessageToDynmap: false
    
    # A channel that displays the content of the speech made from the dynmap Web UI.
    # If dynmapChannel is not specified and globalChannel is specified,
    # If dynmapChannel is not specified and globalChannel is not specified, the chat is usually done.
    dynmapChannel: ''
    
    
    # -------------------- NG word setting --------------------
    
    # NG word setting. You can specify a regular expression.
    #The NG word part is masked by the player who speaks the word set here.
    ngword: []
    
    # NG Word operation setting when speaking. You can set any of four: mask, mute, kick, ban.
    # mask: mask NG words
    # mute: Mute the speaking player from the channel after masking the NG word
    # kick: After masking the NG word, kick the speaking player from the channel
    # ban: After masking the NG word, ban the player who said it from the channel
    # For regular chat (non-channel chat),
    # Even if you set # kick or ban, only the mask is executed.
    ngwordAction: mask
    
    
    # -------------------- Normal chat settings --------------------
    
    # Whether to decorate normal chat (non-channel chat) from LunaChat.
    enableNormalChatMessageFormat: true
    
    # Chat decoration formatting.
    # The following keywords can be used for formatting.
    # %displayname: Speaker display name
    # %player: Speaker ID
    # %world: Name of the world you said (Valid when it is installed on the spigot side. When MultiVerse is installed, the display name of the world is acquired and used.)
    # %server: Speaker's connection server name (valid when installed on BungeeCord side.)
    # %prefix: prefix (replaced if Vault and Prefix/Suffix plugins are installed)
    # %suffix: suffix (replaced if Vault and Prefix/Suffix plugins are installed)
    # %date: date
    # %time: time
    # %msg: Content of statement (When converted to Japanize, the result of Japanize is included.)
    normalChatMessageFormat: '&f%prefix%displayname%suffix&a:&f %msg'
    #normalChatMessageFormat: '&f%displayname@%server&a:&f %msg'
    
    # Color code (&a, &b, etc.) in normal chat (non-channel chat)
    # Whether to enable. If set to false, color codes will not be converted.
    enableNormalChatColorCode: true
    
    # Whether normal chat (non-channel chat) is clickable.
    # If it is clickable, you can click the player name to send a private message, 
    # but plugin will cancel the normal chat and send another clickable message, 
    # so you may not use other chat related plugins.
    # Note that channel chats are always clickable, regardless of this setting.
    enableNormalChatClickable: false
    
    # Whether to log normal chat (non-channel chat) to console.
    # Even if this item is set to false, it may be recorded in the console.
    displayNormalChatOnConsole: true
    
    
    # -------------------- Japanize conversion settings --------------------
    
    # Settings for converting Roman characters to Kana or Kanji.
    # You can set any one of none/kana/GoogleIME.
    # none: No conversion.
    # kana: Kana conversion only.
    # GoogleIME: After converting kana, convert kanji using GoogleIME.
    japanizeType: GoogleIME
    
    # When converting kana or kanji,
    # Display the conversion result in a single line with the original statement content, or
    # Set whether to display only the conversion result on the second line.
    japanizeDisplayLine: 1
    
    # Set the display format when japanizeDisplayLine is 1.
    # The following keywords can be used for formatting.
    # %msg: Original content
    # %japanize: Japanize Within the converted statement
    japanizeLine1Format: '%msg &6(%japanize)'
    
    # Sets the display format for the second line when japanizeDisplayLine is 2.
    # The following keywords can be used for formatting.
    # %msg: Original content
    # %japanize: Japanize Converted remark contents
    japanizeLine2Format: '&6[JP] %japanize'
    
    # Set whether to exclude the player name included in the statement from Japanize conversion.
    japanizeIgnorePlayerName: true
    
    # Non-Japanese marker.
    # If this is at the beginning of your remark, do not temporarily perform Japanize conversion.
    noneJapanizeMarker: '$'
    
    # Sets whether player's Japanize conversion on or off by default.
    japanizePlayerDefault: true
    
    
    # -------------------- BungeeCord settings --------------------
    
    # When plugged in BungeeCord, chat events are sent to the spigot server under it,
    # It is a mode to process after receiving it back.
    # All spigot servers need to have LunaChat installed.
    bungeePassThroughMode: false
    
  Geyser-config.yml: |
    # --------------------------------
    # Geyser Configuration File
    #
    # A bridge between Minecraft: Bedrock Edition and Minecraft: Java Edition.
    #
    # GitHub: https://github.com/GeyserMC/Geyser
    # Discord: https://discord.gg/geysermc
    # --------------------------------
    
    bedrock:
      # The IP address that will listen for connections.
      # Generally, you should only uncomment and change this if you want to limit what IPs can connect to your server.
      address: 0.0.0.0
      # The port that will listen for connections
      port: 25577
      # Some hosting services change your Java port everytime you start the server and require the same port to be used for Bedrock.
      # This option makes the Bedrock port the same as the Java port every time you start the server.
      # This option is for the plugin version only.
      clone-remote-port: true
      # The MOTD that will be broadcasted to Minecraft: Bedrock Edition clients. This is irrelevant if "passthrough-motd" is set to true
      # If either of these are empty, the respective string will default to "Geyser"
      motd1: "Geyser"
      motd2: "Another Geyser server."
      # The Server Name that will be sent to Minecraft: Bedrock Edition clients. This is visible in both the pause menu and the settings menu.
      server-name: "Mic-Server-Geyser"
      # How much to compress network traffic to the Bedrock client. The higher the number, the more CPU usage used, but
      # the smaller the bandwidth used. Does not have any effect below -1 or above 9. Set to -1 to disable.
      compression-level: 6
      # Whether to enable PROXY protocol or not for clients. You DO NOT WANT this feature unless you run UDP reverse proxy
      # in front of your Geyser instance.
      enable-proxy-protocol: false
      # A list of allowed PROXY protocol speaking proxy IP addresses/subnets. Only effective when "enable-proxy-protocol" is enabled, and
      # should really only be used when you are not able to use a proper firewall (usually true with shared hosting providers etc.).
      # Keeping this list empty means there is no IP address whitelist.
      # Both IP addresses and subnets are supported.
      #proxy-protocol-whitelisted-ips: [ "127.0.0.1", "172.18.0.0/16" ]
    remote:
      # The IP address of the remote (Java Edition) server
      # If it is "auto", for standalone version the remote address will be set to 127.0.0.1,
      # for plugin versions, it is recommended to keep this as "auto" so Geyser will automatically configure address, port, and auth-type.
      # Leave as "auto" if floodgate is installed.
      address: auto
      # The port of the remote (Java Edition) server
      # For plugin versions, if address has been set to "auto", the port will also follow the server's listening port.
      port: 25565
      # Authentication type. Can be offline, online, or floodgate (see https://github.com/GeyserMC/Geyser/wiki/Floodgate).
      # For plugin versions, it's recommended to keep the `address` field to "auto" so Floodgate support is automatically configured.
      # If Floodgate is installed and `address:` is set to "auto", then "auth-type: floodgate" will automatically be used.
      auth-type: floodgate
      # Allow for password-based authentication methods through Geyser. Only useful in online mode.
      # If this is false, users must authenticate to Microsoft using a code provided by Geyser on their desktop.
      allow-password-authentication: true
      # Whether to enable PROXY protocol or not while connecting to the server.
      # This is useful only when:
      # 1) Your server supports PROXY protocol (it probably doesn't)
      # 2) You run Velocity or BungeeCord with the option enabled in the proxy's main config.
      # IF YOU DON'T KNOW WHAT THIS IS, DON'T TOUCH IT!
      use-proxy-protocol: false
      # Forward the hostname that the Bedrock client used to connect over to the Java server
      # This is designed to be used for forced hosts on proxies
      forward-hostname: false
    
    # Floodgate uses encryption to ensure use from authorised sources.
    # This should point to the public key generated by Floodgate (BungeeCord, Spigot or Velocity)
    # You can ignore this when not using Floodgate.
    # If you're using a plugin version of Floodgate on the same server, the key will automatically be picked up from Floodgate.
    floodgate-key-file: key.pem
    
    # For online mode authentication type only.
    # Stores a list of Bedrock players that should have their Java Edition account saved after login.
    # This saves a token that can be reused to authenticate the player later. This does not save emails or passwords,
    # but you should still be cautious when adding to this list and giving others access to this Geyser instance's files.
    # Removing a name from this list will delete its cached login information on the next Geyser startup.
    # The file that tokens will be saved in is in the same folder as this config, named "saved-refresh-tokens.json".
    saved-user-logins:
      - ThisExampleUsernameShouldBeLongEnoughToNeverBeAnXboxUsername
      - ThisOtherExampleUsernameShouldAlsoBeLongEnough
    
    # Specify how many seconds to wait while user authorizes Geyser to access their Microsoft account.
    # User is allowed to disconnect from the server during this period.
    pending-authentication-timeout: 120
    
    # Bedrock clients can freeze when opening up the command prompt for the first time if given a lot of commands.
    # Disabling this will prevent command suggestions from being sent and solve freezing for Bedrock clients.
    command-suggestions: true
    
    # The following three options enable "ping passthrough" - the MOTD, player count and/or protocol name gets retrieved from the Java server.
    # Relay the MOTD from the remote server to Bedrock players.
    passthrough-motd: false
    # Relay the protocol name (e.g. BungeeCord [X.X], Paper 1.X) - only really useful when using a custom protocol name!
    # This will also show up on sites like MCSrvStatus. <mcsrvstat.us>
    passthrough-protocol-name: false
    # Relay the player count and max players from the remote server to Bedrock players.
    passthrough-player-counts: false
    # Enable LEGACY ping passthrough. There is no need to enable this unless your MOTD or player count does not appear properly.
    # This option does nothing on standalone.
    legacy-ping-passthrough: false
    # How often to ping the remote server, in seconds. Only relevant for standalone or legacy ping passthrough.
    # Increase if you are getting BrokenPipe errors.
    ping-passthrough-interval: 3
    
    # Whether to forward player ping to the server. While enabling this will allow Bedrock players to have more accurate
    # ping, it may also cause players to time out more easily.
    forward-player-ping: false
    
    # Maximum amount of players that can connect. This is only visual at this time and does not actually limit player count.
    max-players: 100
    
    # If debug messages should be sent through console
    debug-mode: false
    
    # Allow third party capes to be visible. Currently allowing:
    # OptiFine capes, LabyMod capes, 5Zig capes and MinecraftCapes
    allow-third-party-capes: false
    
    # Allow third party deadmau5 ears to be visible. Currently allowing:
    # MinecraftCapes
    allow-third-party-ears: false
    
    # Allow a fake cooldown indicator to be sent. Bedrock players otherwise do not see a cooldown as they still use 1.8 combat.
    # Please note: if the cooldown is enabled, some users may see a black box during the cooldown sequence, like below:
    # https://cdn.discordapp.com/attachments/613170125696270357/957075682230419466/Screenshot_from_2022-03-25_20-35-08.png
    # This can be disabled by going into Bedrock settings under the accessibility tab and setting "Text Background Opacity" to 0
    # This setting can be set to "title", "actionbar" or "false"
    show-cooldown: title
    
    # Controls if coordinates are shown to players.
    show-coordinates: true
    
    # Whether Bedrock players are blocked from performing their scaffolding-style bridging.
    disable-bedrock-scaffolding: false
    
    # If set, when a Bedrock player performs any emote, it will swap the offhand and mainhand items, just like the Java Edition keybind
    # There are three options this can be set to:
    # disabled - the default/fallback, which doesn't apply this workaround
    # no-emotes - emotes will NOT be sent to other Bedrock clients and offhand will be swapped. This effectively disables all emotes from being seen.
    # emotes-and-offhand - emotes will be sent to Bedrock clients and offhand will be swapped
    emote-offhand-workaround: "disabled"
    
    # The default locale if we dont have the one the client requested. Uncomment to not use the default system language.
    # default-locale: en_us
    
    # Specify how many days images will be cached to disk to save downloading them from the internet.
    # A value of 0 is disabled. (Default: 0)
    cache-images: 0
    
    # Allows custom skulls to be displayed. Keeping them enabled may cause a performance decrease on older/weaker devices.
    allow-custom-skulls: true
    
    # The maximum number of custom skulls to be displayed per player. Increasing this may decrease performance on weaker devices.
    # Setting this to -1 will cause all custom skulls to be displayed regardless of distance or number.
    max-visible-custom-skulls: 128
    
    # The radius in blocks around the player in which custom skulls are displayed.
    custom-skull-render-distance: 32
    
    # Whether to add (at this time, only) the furnace minecart as a separate item in the game, which normally does not exist in Bedrock Edition.
    # This should only need to be disabled if using a proxy that does not use the "transfer packet" style of server switching.
    # If this is disabled, furnace minecart items will be mapped to hopper minecart items.
    # This option requires a restart of Geyser in order to change its setting.
    add-non-bedrock-items: true
    
    # Bedrock prevents building and displaying blocks above Y127 in the Nether.
    # This config option works around that by changing the Nether dimension ID to the End ID. 
    # The main downside to this is that the entire Nether will have the same red fog rather than having different fog for each biome.
    above-bedrock-nether-building: false
    
    # Force clients to load all resource packs if there are any.
    # If set to false, it allows the user to connect to the server even if they don't
    # want to download the resource packs.
    force-resource-packs: true
    
    # Allows Xbox achievements to be unlocked.
    # THIS DISABLES ALL COMMANDS FROM SUCCESSFULLY RUNNING FOR BEDROCK IN-GAME, as otherwise Bedrock thinks you are cheating.
    xbox-achievements-enabled: false
    
    # Whether player IP addresses will be logged by the server.
    log-player-ip-addresses: true
    
    # Whether to alert the console and operators that a new Geyser version is available that supports a Bedrock version
    # that this Geyser version does not support. It's recommended to keep this option enabled, as many Bedrock platforms
    # auto-update.
    notify-on-new-bedrock-update: true
    
    # Which item to use to mark unavailable slots in a Bedrock player inventory. Examples of this are the 2x2 crafting grid while in creative,
    # or custom inventory menus with sizes different from the usual 3x9. A barrier block is the default item.
    unusable-space-block: minecraft:barrier
    
    # bStats is a stat tracker that is entirely anonymous and tracks only basic information
    # about Geyser, such as how many people are online, how many servers are using Geyser,
    # what OS is being used, etc. You can learn more about bStats here: https://bstats.org/.
    # https://bstats.org/plugin/server-implementation/GeyserMC
    metrics:
      # If metrics should be enabled
      enabled: true
      # UUID of server, don't change!
      uuid: 1ccf03e4-5972-4669-9e0f-5568cb44142b
    
    # ADVANCED OPTIONS - DO NOT TOUCH UNLESS YOU KNOW WHAT YOU ARE DOING!
    
    # Geyser updates the Scoreboard after every Scoreboard packet, but when Geyser tries to handle
    # a lot of scoreboard packets per second can cause serious lag.
    # This option allows you to specify after how many Scoreboard packets per seconds
    # the Scoreboard updates will be limited to four updates per second.
    scoreboard-packet-threshold: 20
    
    # Allow connections from ProxyPass and Waterdog.
    # See https://www.spigotmc.org/wiki/firewall-guide/ for assistance - use UDP instead of TCP.
    enable-proxy-connections: false
    
    # The internet supports a maximum MTU of 1492 but could cause issues with packet fragmentation.
    # 1400 is the default.
    mtu: 1400
    
    # Whether to connect directly into the Java server without creating a TCP connection.
    # This should only be disabled if a plugin that interfaces with packets or the network does not work correctly with Geyser.
    # If enabled on plugin versions, the remote address and port sections are ignored
    # If disabled on plugin versions, expect performance decrease and latency increase
    use-direct-connection: true
    
    # Whether Geyser should attempt to disable compression for Bedrock players. This should be a benefit as there is no need to compress data
    # when Java packets aren't being handled over the network.
    # This requires use-direct-connection to be true.
    disable-compression: true
    
    config-version: 4
    
  floodgate-config.yml: |
    # In Floodgate bedrock player data is send encrypted
    # The following value should point to the key Floodgate generated.
    # The public key should be used for the Geyser(s) and the private key for the Floodgate(s)
    key-file-name: key.pem
    
    # Floodgate prepends a prefix to bedrock usernames to avoid conflicts
    # However, certain conflicts can cause issues with some plugins so this prefix is configurable using the property below
    # It is recommended to use a prefix that does not contain alphanumerical to avoid the possibility of duplicate usernames.
    username-prefix: "."
    
    # Should spaces be replaced with '_' in bedrock usernames?
    replace-spaces: true
    
    # The default locale for Floodgate. By default, Floodgate uses the system locale
    # default-locale: en_US
    # Should the proxy send the bedrock player data to the servers it is connecting to?
    # This requires Floodgate to be installed on the servers.
    # You'll get kicked if you don't use the plugin. The default value is false because of it
    send-floodgate-data: false
    
    
    disconnect:
      # The disconnect message Geyser users should get when connecting
      # to the server with an invalid key
      invalid-key: Please connect through the official Geyser
      # The disconnect message Geyser users should get when connecting
      # to the server with the correct key but not with the correct data format
      invalid-arguments-length: Expected {} arguments, got {}. Is Geyser up-to-date?
    
    # Configuration for player linking
    player-link:
      # Whether to enable the linking system. Turning this off will prevent
      # players from using the linking feature even if they are already linked.
      enabled: true
    
      # Whether to require a linked account in order to be able to join the server.
      require-link: false
    
      # Set the following option to true when you want to host your own linking database.
      # -> This can work in addition to global linking.
      # Note that you have to install a linking database implementation before enabling this, because
      # it'll cause errors otherwise.
      enable-own-linking: false
    
      # The following three options only apply when 'enable-own-linking' is set to 'true'
    
      # Whether to allow the use of /linkaccount and /unlinkaccount
      # You can also use allow specific people to use the commands using the
      # permissions floodgate.command.linkaccount and floodgate.command.unlinkaccount.
      # This is only for linking, already connected people will stay connected
      allowed: true
      # The amount of time until a link code expires in seconds.
      link-code-timeout: 300
      # The player linking database type you want to use. This option is only used when there
      # are multiple database implementations found in the configuration directory.
      type: sqlite
    
      # Whether to enable global linking. Global Linking is a central server where people can link their
      # accounts (Java and Bedrock) and join on servers that have Global Linking enabled. The goal of
      # Global Linking is to make linking easier by not having to link your accounts on every server.
      # -> Your server-specific linking database will have priority over global linking.
      # Global Linking should normally only be disabled when you don't have internet access or when
      # you have limited internet access.
      enable-global-linking: true
    
    metrics:
      enabled: true
      uuid: a6787e10-296a-4cdd-9ff0-8d0d69452273
    
    # Do not change this
    config-version: 3
    
  geyserskinmanager-bungeecord.yml: |
    # GeyserSkinManager by Camotoy
    
    # Whether to override any Floodgate detection and always show skins.
    # This is not recommended - Floodgate has skin support built-in,
    # or you can use https://modrinth.com/mod/bedrockskinutility/ alongside this mod to show skins, capes, and geometry.
    force-show-skins: true

  LuckPerms-bungeecord.yml: |
    ####################################################################################################
    # +----------------------------------------------------------------------------------------------+ #
    # |                                   __         __   ___  __         __                         | #
    # |                        |    |  | /  ` |__/  |__) |__  |__)  |\/| /__`                        | #
    # |                        |___ \__/ \__, |  \  |    |___ |  \  |  | .__/                        | #
    # |                                                                                              | #
    # |                                     https://luckperms.net                                    | #
    # |                                                                                              | #
    # |  WIKI:        https://luckperms.net/wiki                                                     | #
    # |  DISCORD:     https://discord.gg/luckperms                                                   | #
    # |  BUG REPORTS: https://github.com/LuckPerms/LuckPerms/issues                                  | #
    # |                                                                                              | #
    # |  Each option in this file is documented and explained here:                                  | #
    # |   ==>  https://luckperms.net/wiki/Configuration                                              | #
    # |                                                                                              | #
    # |  New options are not added to this file automatically. Default values are used if an         | #
    # |  option cannot be found. The latest config versions can be obtained at the link above.       | #
    # +----------------------------------------------------------------------------------------------+ #
    ####################################################################################################
    
    # +----------------------------------------------------------------------------------------------+ #
    # |                                                                                              | #
    # |                                      ESSENTIAL SETTINGS                                      | #
    # |                                                                                              | #
    # |                   Important settings that control how LuckPerms functions.                   | #
    # |                                                                                              | #
    # +----------------------------------------------------------------------------------------------+ #
    
    # The name of the server, used for server specific permissions.
    #
    # - When set to "global" this setting is effectively ignored.
    # - In all other cases, the value here is added to all players in a "server" context.
    # - See: https://luckperms.net/wiki/Context
    server: bungee
    
    # If the servers own UUID cache/lookup facility should be used when there is no record for a player
    # already in LuckPerms.
    #
    # - Since BungeeCord doesn't maintain it's own UUID cache, when this option is true, LuckPerms will
    #   try to find a uuid for a username using RedisBungee, if installed.
    use-server-uuid-cache: true
    
    
    
    
    # +----------------------------------------------------------------------------------------------+ #
    # |                                                                                              | #
    # |                                       STORAGE SETTINGS                                       | #
    # |                                                                                              | #
    # |                Controls which storage method LuckPerms will use to store data.               | #
    # |                                                                                              | #
    # +----------------------------------------------------------------------------------------------+ #
    
    # How the plugin should store data
    #
    # - The various options are explained in more detail on the wiki:
    #   https://luckperms.net/wiki/Storage-types
    #
    # - Possible options:
    #
    #   |  Remote databases - require connection information to be configured below
    #   |=> MySQL
    #   |=> MariaDB (preferred over MySQL)
    #   |=> PostgreSQL
    #   |=> MongoDB
    #
    #   |  Flatfile/local database - don't require any extra configuration
    #   |=> H2 (preferred over SQLite)
    #   |=> SQLite
    #
    #   |  Readable & editable text files - don't require any extra configuration
    #   |=> YAML (.yml files)
    #   |=> JSON (.json files)
    #   |=> HOCON (.conf files)
    #   |=> TOML (.toml files)
    #   |
    #   | By default, user, group and track data is separated into different files. Data can be combined
    #   | and all stored in the same file by switching to a combined storage variant.
    #   | Just add '-combined' to the end of the storage-method, e.g. 'yaml-combined'
    #
    # - A H2 database is the default option.
    # - If you want to edit data manually in "traditional" storage files, we suggest using YAML.
    storage-method: MySQL
    
    # The following block defines the settings for remote database storage methods.
    #
    # - You don't need to touch any of the settings here if you're using a local storage method!
    # - The connection detail options are shared between all remote storage types.
    data:
    
      # Define the address and port for the database.
      # - The standard DB engine port is used by default
      #   (MySQL: 3306, PostgreSQL: 5432, MongoDB: 27017)
      # - Specify as "host:port" if differs
      address: 192.168.15.131
    
      # The name of the database to store LuckPerms data in.
      # - This must be created already. Don't worry about this setting if you're using MongoDB.
      database: mic_LuckPerms
    
      # Credentials for the database.
      username: minecraft
      password: 'masaya0209'
    
      # These settings apply to the MySQL connection pool.
      # - The default values will be suitable for the majority of users.
      # - Do not change these settings unless you know what you're doing!
      pool-settings:
    
        # Sets the maximum size of the MySQL connection pool.
        # - Basically this value will determine the maximum number of actual
        #   connections to the database backend.
        # - More information about determining the size of connection pools can be found here:
        #   https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
        maximum-pool-size: 10
    
        # Sets the minimum number of idle connections that the pool will try to maintain.
        # - For maximum performance and responsiveness to spike demands, it is recommended to not set
        #   this value and instead allow the pool to act as a fixed size connection pool.
        #   (set this value to the same as 'maximum-pool-size')
        minimum-idle: 10
    
        # This setting controls the maximum lifetime of a connection in the pool in milliseconds.
        # - The value should be at least 30 seconds less than any database or infrastructure imposed
        #   connection time limit.
        maximum-lifetime: 1800000 # 30 minutes
    
        # This setting controls how frequently the pool will 'ping' a connection in order to prevent it
        # from being timed out by the database or network infrastructure, measured in milliseconds.
        # - The value should be less than maximum-lifetime and greater than 30000 (30 seconds).
        # - Setting the value to zero will disable the keepalive functionality.
        keepalive-time: 0
    
        # This setting controls the maximum number of milliseconds that the plugin will wait for a
        # connection from the pool, before timing out.
        connection-timeout: 5000 # 5 seconds
    
        # This setting allows you to define extra properties for connections.
        #
        # By default, the following options are set to enable utf8 encoding. (you may need to remove
        # these if you are using PostgreSQL)
        #   useUnicode: true
        #   characterEncoding: utf8
        #
        # You can also use this section to disable SSL connections, by uncommenting the 'useSSL' and
        # 'verifyServerCertificate' options below.
        properties:
          useUnicode: true
          characterEncoding: utf8
          #useSSL: false
          #verifyServerCertificate: false
    
      # The prefix for all LuckPerms SQL tables.
      #
      # - This only applies for remote SQL storage types (MySQL, MariaDB, etc).
      # - Change this if you want to use different tables for different servers.
      table-prefix: 'luckperms_'
    
      # The prefix to use for all LuckPerms MongoDB collections.
      #
      # - This only applies for the MongoDB storage type.
      # - Change this if you want to use different collections for different servers. The default is no
      # prefix.
      mongodb-collection-prefix: ''
    
      # The connection string URI to use to connect to the MongoDB instance.
      #
      # - When configured, this setting will override anything defined in the address, database,
      #   username or password fields above.
      # - If you have a connection string that starts with 'mongodb://' or 'mongodb+srv://', enter it
      #   below.
      # - For more information, please see https://docs.mongodb.com/manual/reference/connection-string/
      mongodb-connection-uri: ''
    
    # Define settings for a "split" storage setup.
    #
    # - This allows you to define a storage method for each type of data.
    # - The connection options above still have to be correct for each type here.
    split-storage:
      # Don't touch this if you don't want to use split storage!
      enabled: false
      methods:
        # These options don't need to be modified if split storage isn't enabled.
        user: h2
        group: h2
        track: h2
        uuid: h2
        log: h2
    
    
    
    
    # +----------------------------------------------------------------------------------------------+ #
    # |                                                                                              | #
    # |                            UPDATE PROPAGATION & MESSAGING SERVICE                            | #
    # |                                                                                              | #
    # |    Controls the ways in which LuckPerms will sync data & notify other servers of changes.    | #
    # |     These options are documented on greater detail on the wiki under "Instant Updates".      | #
    # |                                                                                              | #
    # +----------------------------------------------------------------------------------------------+ #
    
    # This option controls how frequently LuckPerms will perform a sync task.
    #
    # - A sync task will refresh all data from the storage, and ensure that the most up-to-date data is
    #   being used by the plugin.
    # - This is disabled by default, as most users will not need it. However, if you're using a remote
    #   storage type without a messaging service setup, you may wish to set this to something like 3.
    # - Set to -1 to disable the task completely.
    sync-minutes: -1
    
    # If the file watcher should be enabled.
    #
    # - When using a file-based storage type, LuckPerms can monitor the data files for changes, and
    #   automatically update when changes are detected.
    # - If you don't want this feature to be active, set this option to false.
    watch-files: true
    
    # Define which messaging service should be used by the plugin.
    #
    # - If enabled and configured, LuckPerms will use the messaging service to inform other connected
    #   servers of changes.
    # - Use the command "/lp networksync" to manually push changes.
    # - Data is NOT stored using this service. It is only used as a messaging platform.
    #
    # - If you decide to enable this feature, you should set "sync-minutes" to -1, as there is no need
    #   for LuckPerms to poll the database for changes.
    #
    # - Possible options:
    #   => sql           Uses the SQL database to form a queue system for communication. Will only work
    #                    when 'storage-method' is set to MySQL or MariaDB. This is chosen by default if
    #                    the option is set to 'auto' and SQL storage is in use. Set to 'notsql' to
    #                    disable this.
    #   => pluginmsg     Uses the plugin messaging channels to communicate with the proxy.
    #                    LuckPerms must be installed on your proxy & all connected servers backend
    #                    servers. Won't work if you have more than one BungeeCord proxy.
    #   => redis         Uses Redis pub-sub to push changes. Your server connection info must be
    #                    configured below.
    #   => redisbungee   Uses Redis pub-sub to push changes, using the RedisBungee API. You need to have
    #                    the RedisBungee plugin installed.
    #   => rabbitmq      Uses RabbitMQ pub-sub to push changes. Your server connection info must be
    #                    configured below.
    #   => nats          Uses Nats pub-sub to push changes. Your server connection info must be
    #                    configured below.
    #   => custom        Uses a messaging service provided using the LuckPerms API.
    #   => auto          Attempts to automatically setup a messaging service using redis or sql.
    messaging-service: auto
    
    # If LuckPerms should automatically push updates after a change has been made with a command.
    auto-push-updates: true
    
    # If LuckPerms should push logging entries to connected servers via the messaging service.
    push-log-entries: true
    
    # If LuckPerms should broadcast received logging entries to players on this platform.
    #
    # - If you have LuckPerms installed on your backend servers as well as a BungeeCord proxy, you
    #   should set this option to false on either your backends or your proxies, to avoid players being
    #   messaged twice about log entries.
    broadcast-received-log-entries: false
    
    # Settings for Redis.
    # Port 6379 is used by default; set address to "host:port" if differs
    # Multiple Redis nodes can be specified in the same format as a string list under the name "addresses".
    redis:
      enabled: false
      address: localhost
      username: ''
      password: ''
    
    # Settings for Nats.
    # Port 4222 is used by default; set address to "host:port" if differs
    nats:
      enabled: false
      address: localhost
      username: ''
      password: ''
    
    # Settings for RabbitMQ.
    # Port 5672 is used by default; set address to "host:port" if differs
    rabbitmq:
      enabled: false
      address: localhost
      vhost: '/'
      username: 'guest'
      password: 'guest'
    
    
    
    
    # +----------------------------------------------------------------------------------------------+ #
    # |                                                                                              | #
    # |                                    CUSTOMIZATION SETTINGS                                    | #
    # |                                                                                              | #
    # |              Settings that allow admins to customize the way LuckPerms operates.             | #
    # |                                                                                              | #
    # +----------------------------------------------------------------------------------------------+ #
    
    # If LuckPerms should ensure all players have permission data when they connect to the server.
    #
    # - When set to true, LuckPerms will cancel login attempts if it is unable to load permissions data
    #   for a user, or if the storage provider is unavailable.
    # - When set to false, LuckPerms will allow a player to connect regardless of whether their
    #   permissions data could be loaded.
    # - This option does not exist on other platforms, and effectively defaults to true - however,
    #   the option is provided on BungeeCord, as it is less likely to be so dependant on permissions.
    cancel-failed-logins: false
    
    # Controls how temporary permissions/parents/meta should be accumulated.
    #
    # - The default behaviour is "deny".
    # - This behaviour can also be specified when the command is executed. See the command usage
    #   documentation for more info.
    #
    # - Possible options:
    #   => accumulate   durations will be added to the existing expiry time
    #   => replace      durations will be replaced if the new duration is later than the current
    #                   expiration
    #   => deny         the command will just fail if you try to add another node with the same expiry
    temporary-add-behaviour: deny
    
    # Controls how LuckPerms will determine a users "primary" group.
    #
    # - The meaning and influence of "primary groups" are explained in detail on the wiki.
    # - The preferred approach is to let LuckPerms automatically determine a users primary group
    #   based on the relative weight of their parent groups.
    #
    # - Possible options:
    #   => stored                  use the value stored against the users record in the file/database
    #   => parents-by-weight       just use the users most highly weighted parent
    #   => all-parents-by-weight   same as above, but calculates based upon all parents inherited from
    #                              both directly and indirectly
    primary-group-calculation: parents-by-weight
    
    # If the plugin should check for "extra" permissions with users run LP commands.
    #
    # - These extra permissions allow finer control over what users can do with each command, and who
    #   they have access to edit.
    # - The nature of the checks are documented on the wiki under "Argument based command permissions".
    # - Argument based permissions are *not* static, unlike the 'base' permissions, and will depend upon
    #   the arguments given within the command.
    argument-based-command-permissions: false
    
    # If the plugin should check whether senders are a member of a given group before they're able to
    # edit the groups data or add/remove other users to/from it.
    # Note: these limitations do not apply to the web editor!
    require-sender-group-membership-to-modify: false
    
    # If the plugin should send log notifications to users whenever permissions are modified.
    #
    # - Notifications are only sent to those with the appropriate permission to receive them
    # - They can also be temporarily enabled/disabled on a per-user basis using
    #   '/lp log notify <on|off>'
    log-notify: true
    
    # Defines a list of log entries which should not be sent as notifications to users.
    #
    # - Each entry in the list is a RegEx expression which is matched against the log entry description.
    log-notify-filtered-descriptions:
    #  - "parent add example"
    
    # If LuckPerms should automatically install translation bundles and periodically update them.
    auto-install-translations: true
    
    # Defines the options for prefix and suffix stacking.
    #
    # - The feature allows you to display multiple prefixes or suffixes alongside a players username in
    #   chat.
    # - It is explained and documented in more detail on the wiki under "Prefix & Suffix Stacking".
    #
    # - The options are divided into separate sections for prefixes and suffixes.
    # - The 'duplicates' setting refers to how duplicate elements are handled. Can be 'retain-all',
    #   'first-only' or 'last-only'.
    # - The value of 'start-spacer' is included at the start of the resultant prefix/suffix.
    # - The value of 'end-spacer' is included at the end of the resultant prefix/suffix.
    # - The value of 'middle-spacer' is included between each element in the resultant prefix/suffix.
    #
    # - Possible format options:
    #   => highest                        Selects the value with the highest weight, from all values
    #                                     held by or inherited by the player.
    #
    #   => lowest                         Same as above, except takes the one with the lowest weight.
    #
    #   => highest_own                    Selects the value with the highest weight, but will not
    #                                     accept any inherited values.
    #
    #   => lowest_own                     Same as above, except takes the value with the lowest weight.
    #
    #   => highest_inherited              Selects the value with the highest weight, but will only
    #                                     accept inherited values.
    #
    #   => lowest_inherited               Same as above, except takes the value with the lowest weight.
    #
    #   => highest_on_track_<track>       Selects the value with the highest weight, but only if the
    #                                     value was inherited from a group on the given track.
    #
    #   => lowest_on_track_<track>        Same as above, except takes the value with the lowest weight.
    #
    #   => highest_not_on_track_<track>   Selects the value with the highest weight, but only if the
    #                                     value was inherited from a group not on the given track.
    #
    #   => lowest_not_on_track_<track>    Same as above, except takes the value with the lowest weight.
    #
    #   => highest_from_group_<group>     Selects the value with the highest weight, but only if the
    #                                     value was inherited from the given group.
    #
    #   => lowest_from_group_<group>      Same as above, except takes the value with the lowest weight.
    #
    #   => highest_not_from_group_<group> Selects the value with the highest weight, but only if the
    #                                     value was not inherited from the given group.
    #
    #   => lowest_not_from_group_<group>  Same as above, except takes the value with the lowest weight.
    meta-formatting:
      prefix:
        format:
          - "highest"
        duplicates: first-only
        start-spacer: ""
        middle-spacer: " "
        end-spacer: ""
      suffix:
        format:
          - "highest"
        duplicates: first-only
        start-spacer: ""
        middle-spacer: " "
        end-spacer: ""
    
    
    
    
    # +----------------------------------------------------------------------------------------------+ #
    # |                                                                                              | #
    # |                            PERMISSION CALCULATION AND INHERITANCE                            | #
    # |                                                                                              | #
    # |    Modify the way permission checks, meta lookups and inheritance resolutions are handled.   | #
    # |                                                                                              | #
    # +----------------------------------------------------------------------------------------------+ #
    
    # The algorithm LuckPerms should use when traversing the "inheritance tree".
    #
    # - Possible options:
    #   => breadth-first            See: https://en.wikipedia.org/wiki/Breadth-first_search
    #   => depth-first-pre-order    See: https://en.wikipedia.org/wiki/Depth-first_search
    #   => depth-first-post-order   See: https://en.wikipedia.org/wiki/Depth-first_search
    inheritance-traversal-algorithm: depth-first-pre-order
    
    # If a final sort according to "inheritance rules" should be performed after the traversal algorithm
    # has resolved the inheritance tree.
    #
    # "Inheritance rules" refers to things such as group weightings, primary group status, and the
    # natural contextual ordering of the group nodes.
    #
    # Setting this to 'true' will allow for the inheritance rules to take priority over the structure of
    # the inheritance tree.
    #
    # Effectively when this setting is 'true': the tree is flattened, and rules applied afterwards,
    # and when this setting is 'false':, the rules are just applied during each step of the traversal.
    post-traversal-inheritance-sort: false
    
    # Defines the mode used to determine whether a set of contexts are satisfied.
    #
    # - Possible options:
    #   => at-least-one-value-per-key   Set A will be satisfied by another set B, if at least one of the
    #                                   key-value entries per key in A are also in B.
    #   => all-values-per-key           Set A will be satisfied by another set B, if all key-value
    #                                   entries in A are also in B.
    context-satisfy-mode: at-least-one-value-per-key
    
    # LuckPerms has a number of built-in contexts. These can be disabled by adding the context key to
    # the list below.
    disabled-contexts:
    #  - "world"
    
    # +----------------------------------------------------------------------------------------------+ #
    # | Permission resolution settings                                                               | #
    # +----------------------------------------------------------------------------------------------+ #
    
    # If users on this server should have their global permissions applied.
    # When set to false, only server specific permissions will apply for users on this server
    include-global: true
    
    # If users on this server should have their global world permissions applied.
    # When set to false, only world specific permissions will apply for users on this server
    include-global-world: true
    
    # If users on this server should have global (non-server specific) groups applied
    apply-global-groups: true
    
    # If users on this server should have global (non-world specific) groups applied
    apply-global-world-groups: true
    
    # +----------------------------------------------------------------------------------------------+ #
    # | Meta lookup settings                                                                         | #
    # +----------------------------------------------------------------------------------------------+ #
    
    # Defines how meta values should be selected.
    #
    # - Possible options:
    #   => inheritance      Selects the meta value that was inherited first
    #   => highest-number   Selects the highest numerical meta value
    #   => lowest-number    Selects the lowest numerical meta value
    meta-value-selection-default: inheritance
    
    # Defines how meta values should be selected per key.
    meta-value-selection:
    #  max-homes: highest-number
    
    # +----------------------------------------------------------------------------------------------+ #
    # | Inheritance settings                                                                         | #
    # +----------------------------------------------------------------------------------------------+ #
    
    # If the plugin should apply wildcard permissions.
    #
    # - If set to true, LuckPerms will detect wildcard permissions, and resolve & apply all registered
    #   permissions matching the wildcard.
    apply-wildcards: true
    
    # If LuckPerms should resolve and apply permissions according to the Sponge style implicit wildcard
    # inheritance system.
    #
    # - That being: If a user has been granted "example", then the player should have also be
    #   automatically granted "example.function", "example.another", "example.deeper.nesting",
    #   and so on.
    apply-sponge-implicit-wildcards: false
    
    # If the plugin should parse regex permissions.
    #
    # - If set to true, LuckPerms will detect regex permissions, marked with "r=" at the start of the
    #   node, and resolve & apply all registered permissions matching the regex.
    apply-regex: true
    
    # If the plugin should complete and apply shorthand permissions.
    #
    # - If set to true, LuckPerms will detect and expand shorthand node patterns.
    apply-shorthand: true
    
    # If the plugin should apply the permissions & groups defined in the BungeeCord config.yml
    #
    # - If set to false, LuckPerms will ignore these values.
    apply-bungee-config-permissions: false
    
    # +----------------------------------------------------------------------------------------------+ #
    # | Extra settings                                                                               | #
    # +----------------------------------------------------------------------------------------------+ #
    
    # A list of context calculators which will be skipped when calculating contexts.
    #
    # - You can disable context calculators by either:
    #   => specifying the Java class name used by the calculator (e.g. com.example.ExampleCalculator)
    #   => specifying a sub-section of the Java package used by the calculator (e.g. com.example)
    disabled-context-calculators: []
    
    # Allows you to set "aliases" for the worlds sent forward for context calculation.
    #
    # - These aliases are provided in addition to the real world name. Applied recursively.
    # - Remove the comment characters for the default aliases to apply.
    world-rewrite:
    #  world_nether: world
    #  world_the_end: world
    
    # Define special group weights for this server.
    #
    # - Group weights can also be applied directly to group data, using the setweight command.
    # - This section allows weights to be set on a per-server basis.
    group-weight:
    #  admin: 10
    
    
    
    
    # +----------------------------------------------------------------------------------------------+ #
    # |                                                                                              | #
    # |                                      FINE TUNING OPTIONS                                     | #
    # |                                                                                              | #
    # |     A number of more niche settings for tweaking and changing behaviour. The section also    | #
    # | contains toggles for some more specialised features. It is only necessary to make changes to | #
    # |                  these options if you want to fine-tune LuckPerms behaviour.                 | #
    # |                                                                                              | #
    # +----------------------------------------------------------------------------------------------+ #
    
    # +----------------------------------------------------------------------------------------------+ #
    # | Miscellaneous (and rarely used) settings                                                     | #
    # +----------------------------------------------------------------------------------------------+ #
    
    # If LuckPerms should produce extra logging output when it handles logins.
    #
    # - Useful if you're having issues with UUID forwarding or data not being loaded.
    debug-logins: false
    
    # If LuckPerms should allow usernames with non alphanumeric characters.
    #
    # - Note that due to the design of the storage implementation, usernames must still be 16 characters
    #   or less.
    allow-invalid-usernames: false
    
    # If LuckPerms should not require users to confirm bulkupdate operations.
    #
    # - When set to true, operations will be executed immediately.
    # - This is not recommended, as bulkupdate has the potential to irreversibly delete large amounts of
    #   data, and is not designed to be executed automatically.
    # - If automation is needed, users should prefer using the LuckPerms API.
    skip-bulkupdate-confirmation: false
    
    # If LuckPerms should prevent bulkupdate operations.
    #
    # - When set to true, bulkupdate operations (the /lp bulkupdate command) will not work.
    # - When set to false, bulkupdate operations will be allowed via the console.
    disable-bulkupdate: false
    
    # If LuckPerms should allow a users primary group to be removed with the 'parent remove' command.
    #
    # - When this happens, the plugin will set their primary group back to default.
    prevent-primary-group-removal: false
